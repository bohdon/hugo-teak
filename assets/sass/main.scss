@charset "utf-8";

@import url('https://fonts.googleapis.com/css?family=Rubik:400');

@import "../../../../node_modules/bulma/sass/utilities/functions.sass";

$test: hsl(308, 100%, 50%);

// new colors
$teal-dark: hsl(173, 31%, 45%);
$grey-darker-bis: hsl(26, 5%, 25%);
$grey-darker-ter: hsl(26, 5%, 28%);

// bulma global variables
$black: hsl(26, 5%, 9%);
$black-bis: hsl(26, 5%, 11%);
$black-ter: hsl(26, 5%, 17%);
$grey-darker: hsl(26, 5%, 21.5%);
$grey-dark: hsl(26, 7%, 42%);
$grey: hsl(32, 7%, 56%);
$grey-light: hsl(32, 18%, 64%);
$grey-lighter: hsl(32, 13%, 71%);
$grey-lightest: hsl(0, 0%, 93%);
$white-ter: hsl(0, 0%, 93%);
$white-bis: hsl(0, 0%, 98%);
$white: hsl(0, 0%, 100%);
$orange: hsl(14, 80%, 53%);
$yellow: hsl(44, 72%, 50%);
$green: hsl(88, 46%, 46%);
$turquoise: hsl(170, 33%, 49%);
$cyan: hsl(207, 61%, 53%);
$blue: hsl(192, 46%, 50%);
$purple: hsl(278, 54%, 56%);
$red: hsl(7, 46%, 48%);
$family-sans-serif: "Rubik", sans-serif;
$weight-semibold: 400;

// bulma derived variables
$primary: $grey-dark;
$info: $turquoise;
$success: $green;
$warning: $yellow;
$danger: $red;
$primary-light: bulmaRgba($primary, 0.3);
$primary-dark: $primary;
$info-light: bulmaRgba($info, 0.3);
$info-dark: $info;
$success-light: bulmaRgba($success, 0.3);
$success-dark: $success;
$warning-light: bulmaRgba($warning, 0.3);
$warning-dark: $warning;
$danger-light: bulmaRgba($danger, 0.3);
$danger-dark: $danger;
$link: $grey-lighter;
$link-light: bulmaRgba($link, 0.3);
$link-dark: $link;
$link-hover: $turquoise;
$link-hover-border: $link-hover;
$link-active: $grey-lighter;
$link-active-border: $grey-lighter;
$light: $grey;
$dark: $grey-darker;
$scheme-main: $grey-darker;
$scheme-main-bis: $black-ter;
$scheme-main-ter: $black-bis;
$scheme-invert: $black;
$scheme-invert-bis: $black-bis;
$scheme-invert-ter: $black-ter;
$background: $grey-darker;
$border: $grey-darker-ter;
$border-hover: $link-hover;
$border-light: $grey-darker-bis;
$border-light-hover: $link-hover;
$text: $grey;
$text-light: $grey;
$text-strong: $grey-light;
$pre: $text;
$pre: $background;

// bulma component variables
$card-content-background-color: $grey-darker-bis;
$navbar-item-hover-color: $link-hover;
$navbar-dropdown-item-hover-color: $link-hover;
$panel-heading-background-color: $grey-darker-bis;
$panel-block-hover-background-color: $grey-darker-bis;
$pagination-current-background-color: $grey-dark;
$pagination-current-border-color: $grey-dark;


@import "../../../../node_modules/bulma/bulma.sass";

.button, .tag {
    text-transform: uppercase;
}

.title {
    font-weight: $weight-normal;
}

.input, .select select {
    color: $grey;
}

.box {
    background-color: $grey-darker-bis;
}

a.has-text-primary:hover, a.has-text-link:hover {
    color: $link-hover !important;
}

.content blockquote {
    background-color: $grey-darker-bis;
    border-color: $grey-dark;
    border-radius: $radius-small;
}

$blockquote-bg-alpha-adjust: -0.85;

.content blockquote.is-primary {
    background-color: adjust-color($primary, $alpha: $blockquote-bg-alpha-adjust);
    color: $primary;
    border-color: $primary;
}

.content blockquote.is-link {
    background-color: adjust-color($link, $alpha: $blockquote-bg-alpha-adjust);
    color: $link;
    border-color: $link;
}

.content blockquote.is-info {
    background-color: adjust-color($info, $alpha: $blockquote-bg-alpha-adjust);
    color: $info;
    border-color: $info;
}

.content blockquote.is-success {
    background-color: adjust-color($success, $alpha: $blockquote-bg-alpha-adjust);
    color: $success;
    border-color: $success;
}

.content blockquote.is-warning {
    background-color: adjust-color($warning, $alpha: $blockquote-bg-alpha-adjust);
    color: $warning;
    border-color: $warning;
}

.content blockquote.is-danger {
    background-color: adjust-color($danger, $alpha: $blockquote-bg-alpha-adjust);
    color: $danger;
    border-color: $danger;
}

.content blockquote {
    strong, code {
        color: unset;
    }
}


@import "syntax/_syntax-theme-teak.scss";

// simple, non-syntax highlighted code block, uses chroma colors from theme
pre, code {
    background-color: $chroma-bg;
    color: $chroma-fg;
}

code, pre {
    border-radius: $radius;
}

.content div.highlight:not(:last-child) {
    margin-bottom: 1em;
}

.card {

    &.is-horizontal {
        flex-direction: row;
        display: flex;
        flex-basis: 50ex;
        flex-grow: 0;
        flex-shrink: 1;

        .card-image {
            flex: 0.5;
            flex-shrink: 1;

            .image {
                display: block;
                position: relative;
                overflow: hidden;
                height: 100%;
                width: 100%;
            }

            img {
                height: 100%;
                object-fit: cover;
                object-position: center;

                &:first-child {
                    border-top-left-radius: $radius;
                    border-bottom-left-radius: $radius;
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                }
            }

        }

        .card-content {
            flex: 3;
            flex-shrink: 3;

            &:not(:first-child) {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }

            &:last-child {
                border-top-right-radius: $radius;
                border-bottom-right-radius: $radius;
            }
        }
    }
}
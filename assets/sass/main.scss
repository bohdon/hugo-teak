@charset "utf-8";

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap');

@import "../../../../node_modules/bulma/sass/utilities/functions.sass";

// new variables
$scheme-main-hue: 12;
$scheme-main-sat: 2%;
$scheme-main-sat-high: 3%;
$grey-darker-bis: hsl($scheme-main-hue, $scheme-main-sat, 20%);
$grey-darker-ter: hsl($scheme-main-hue, $scheme-main-sat, 28%);
$shadow-custom: 3px 3px 8px rgba(0, 0, 0, 0.15);
$corner-badge-size: 1.2rem;

// content colors
$content-docs-color: hsl($scheme-main-hue, $scheme-main-sat-high, 36%);
$content-links-color: hsl(164, 26%, 54%);
$content-tools-color: hsl(263, 32%, 56%);
$content-creative-color: hsl(20, 2%, 12%);

// bulma global variables
$black: hsl($scheme-main-hue, $scheme-main-sat, 9%);
$black-bis: hsl($scheme-main-hue, $scheme-main-sat, 11%);
$black-ter: hsl($scheme-main-hue, $scheme-main-sat, 12%);
$grey-darker: hsl($scheme-main-hue, $scheme-main-sat, 15%);
$grey-dark: hsl($scheme-main-hue, $scheme-main-sat, 42%);
$grey: hsl($scheme-main-hue, $scheme-main-sat, 56%);
$grey-light: hsl($scheme-main-hue, $scheme-main-sat-high, 68%);
$grey-lighter: hsl($scheme-main-hue, $scheme-main-sat-high, 74%);
$grey-lightest: hsl($scheme-main-hue, $scheme-main-sat, 85%);
$white-ter: hsl($scheme-main-hue, $scheme-main-sat, 93%);
$white-bis: hsl($scheme-main-hue, $scheme-main-sat, 98%);
$white: hsl($scheme-main-hue, $scheme-main-sat, 100%);
$orange: hsl(14, 80%, 53%);
$yellow: hsl(44, 72%, 50%);
$green: hsl(88, 46%, 46%);
$turquoise: hsl(164, 26%, 54%);
$cyan: hsl(207, 61%, 53%);
$blue: hsl(192, 46%, 50%);
$purple: hsl(278, 54%, 56%);
$red: hsl(7, 46%, 48%);
$family-sans-serif: "Inter", sans-serif;
$weight-light: 300;
$weight-normal: 400;
$weight-medium: 400;
$weight-semibold: 500;
$weight-bold: 600;
$radius-small: 3px;
$radius: 3px;
$radius-large: 6px;
$radius-rare: 0.25rem;
$shadow: 0;
// increase widescreen a small amount (default 1216px)
$widescreen: 1280px;
// limit all containers to widescreen to make space for sidebar.
$container-max-width: $widescreen;

// bulma derived variables
$body-size: 16px;
$primary: $grey-dark;
$primary-invert: $grey-lightest;
$info: $turquoise;
$success: $green;
$warning: $yellow;
$danger: $red;
$primary-light: bulmaRgba($primary, 0.3);
$primary-dark: $primary;
$info-light: bulmaRgba($info, 0.3);
$info-dark: $info;
$success-light: bulmaRgba($success, 0.3);
$success-dark: $success;
$warning-light: bulmaRgba($warning, 0.3);
$warning-dark: $warning;
$danger-light: bulmaRgba($danger, 0.3);
$danger-dark: $danger;
$link: $grey-lighter;
$link-light: bulmaRgba($link, 0.3);
$link-dark: $link;
$link-hover: $turquoise;
$link-hover-border: $link-hover;
$link-active: $grey-lighter;
$link-active-border: $grey-lighter;
$link-focus: $grey-lighter;
$link-focus-border: $grey-darker-bis;
$light: $grey;
$light-invert: $grey-lightest;
$dark: $black-bis;
$dark-invert: $grey-light;
$scheme-main: $grey-darker;
$scheme-main-bis: $black-bis;
$scheme-main-ter: $black-ter;
$scheme-invert: $black;
$scheme-invert-bis: $black-bis;
$scheme-invert-ter: $black-ter;
$background: $grey-darker;
$border: $grey-darker-ter;
$border-hover: $link-hover;
$border-light: $grey-darker-bis;
$border-light-hover: $link-hover;
$text: $grey-light;
$text-light: $grey-lighter;
$text-strong: $grey-lighter;
$pre: $text;
$pre: $background;
$content-heading-line-height: 1em;
$content-blockquote-padding: 1em 1.25em;

// bulma component variables
$column-gap: 0.5rem;
$navbar-breakpoint: 769px;
$navbar-tab-hover-border-bottom-color: $link-hover;
$navbar-item-hover-color: $link-hover;
$navbar-dropdown-boxed-shadow: $shadow-custom;
$navbar-dropdown-item-hover-color: $link-hover;
$navbar-background-color: $scheme-main-ter;
$notification-background-color: $black-ter;
$button-border-color: none;
$button-hover-border-color: none;
$button-active-border-color: none;
$button-focus-border-color: none;
$card-header-shadow: none;
$card-content-background-color: $grey-darker-bis;
$card-content-padding: 0.72rem;
$card-radius: $radius-rare;
$panel-heading-background-color: $grey-darker-bis;
$panel-block-hover-background-color: $grey-darker-bis;
$pagination-current-background-color: $grey-dark;
$pagination-current-border-color: $grey-dark;
$tag-radius: $radius-rare;

// new component variables
$sidebar-width: 300px;
$sidebar-width-lg: 400px;


@import "../../../../node_modules/bulma/bulma.sass";

html {
    @include mobile {
        font-size: $body-size * 0.8;
    }
    @include tablet {
        font-size: $body-size * 0.85;
    }
    @include desktop {
        font-size: $body-size * 0.9;
    }
    @include widescreen {
        font-size: $body-size;
    }

    scroll-behavior: smooth;
    scroll-padding-top: $navbar-height + 1.75rem;
}

body {
    min-height: 100vh;
    // body is flex to support expanding main content
    display: flex;
    flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}

main {
    // ensure main section expands to fill window height
    flex: 1 0 auto;
}

@include until($widescreen + $sidebar-width * 2) {
    .sidebar {
        display: none;
    }
}
@include from($widescreen + $sidebar-width * 2) {
    .sidebar {
        width: $sidebar-width;
        margin-left: -$sidebar-width - 30px;
    }
}
@include from($widescreen + $sidebar-width-lg * 2) {
    .sidebar {
        width: $sidebar-width-lg;
        margin-left: -$sidebar-width-lg - 30px;
    }
}

.sidebar.sticky {
    position: sticky;
    top: $navbar-height + 1.75rem;
    float: left;
}

#TableOfContents {
    li {
        font-size: $size-6 * 0.9;
        padding-left: 0.6em;
        border-left: 2px solid rgba(0, 0, 0, 0);

        &.is-active {
            border-color: $link;

            > a {
                color: $link;
            }
        }
        &:has(li.is-active) {
            border-color: $primary;
        }

        // indent 2nd..nth list items
        li {
            padding-left: 0.7rem;
        }

        a {
            color: $primary;
        }

        a:hover {
            color: $link-hover;
        }
    }
}

.content {
    a {
        // show link underlines in main content body for clarity
        text-decoration: underline;
        text-underline-offset: 3px;
    }

    h1 {
        font-size: 1.75em;
    }
    h2 {
        font-size: 1.5em;
    }
    h3 {
        font-size: 1.25em;
    }
    h4, h5, h6 {
        font-size: 1em;
    }
}

.overflow-parent {
    min-width: 0;
}

.column {
    .card {
        &.vfill {
            height: 100%;
        }
    }
}

.tag.is-transparent {
    background: transparent;
}

.input, .select select {
    color: $grey;
}

.box {
    background-color: $grey-darker-bis;
}

.pre-footer {
    background-color: $black-ter;
    padding: $box-padding;
}

a.has-text-primary:hover, a.has-text-link:hover {
    color: $link-hover !important;
}

.navbar {
    &.is-transparent {
        transition: all 0.25s;

        &:not(.scrolled) {
            background: transparent;
        }
    }

    .container {
        // keep same padding as .section
        @include mobile {
            padding: 0 1.5rem;
        }
        @include tablet-only {
            padding: 0 1.5rem;
        }
    }
}

.navbar {
    .navbar-brand {
        margin-left: 0 !important;

        .navbar-item {
            padding-left: 0;
        }
    }
}

// enable navbar dropdowns even at small screen widths
.navbar-item {
    &.has-dropdown {
        .navbar-dropdown {
            display: none;
        }

        &.is-active, &.is-hoverable:hover {
            .navbar-dropdown {
                padding: 0;
                display: block;
                background-color: $background;
                border-radius: $radius;
                // border-right: 2px solid $border;
                box-shadow: $navbar-dropdown-boxed-shadow;
                left: 0;
                min-width: 100%;
                position: absolute;
                top: 100%;
                z-index: 20;

                .navbar-item {
                    padding: 0.375rem 1rem;
                    padding-right: 2rem;
                    white-space: nowrap;
                }

                .navbar-divider {
                    display: block;
                }
            }
        }
    }

    &.is-tab {
        // make bottom-border width consistent for active and focused
        border-bottom: 3px solid transparent;
        padding-bottom: calc(0.5rem - 3px);

        &.is-active {
            &, &:not(:focus):not(:hover)
            {
                &.links-type {
                    color: $content-links-color;
                    border-color: $content-links-color;
                }
                &.tools-type {
                    color: $content-tools-color;
                    border-color: $content-tools-color;
                }
            }
        }
    }

}

.navbar.is-transparent{
    .navbar-link:hover, .navbar-item:focus {
        background-color: transparent;
    }
}

@media screen and (min-width: $tablet) {
    .navbar-mobile-item {
        display: none;
    }
}

$blockquote-bg-alpha-adjust: -0.85;

.content {

    blockquote {
        background-color: $grey-darker-bis;
        border-color: $grey-dark;
        border-radius: $radius-small;

        .is-primary {
            background-color: adjust-color($primary, $alpha: $blockquote-bg-alpha-adjust);
            color: $primary;
            border-color: $primary;
        }

        .is-link {
            background-color: adjust-color($link, $alpha: $blockquote-bg-alpha-adjust);
            color: $link;
            border-color: $link;
        }

        .is-info {
            background-color: adjust-color($info, $alpha: $blockquote-bg-alpha-adjust);
            color: $info;
            border-color: $info;
        }

        .is-success {
            background-color: adjust-color($success, $alpha: $blockquote-bg-alpha-adjust);
            color: $success;
            border-color: $success;
        }

        .is-warning {
            background-color: adjust-color($warning, $alpha: $blockquote-bg-alpha-adjust);
            color: $warning;
            border-color: $warning;
        }

        .is-danger {
            background-color: adjust-color($danger, $alpha: $blockquote-bg-alpha-adjust);
            color: $danger;
            border-color: $danger;
        }

        strong, code {
            color: unset;
        }
    }

    // youtube embeds, add some bottom padding to match other content
    .yt, .vimeo {
        position: relative;
        padding-bottom: 56.25%;
        height: 0;
        overflow: hidden;
        margin-bottom: 1rem;

        iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: 0;
        }
    }

    // add some border radius to images
    img {
        border-radius: $radius-small;
    }
}

@import "syntax/_syntax-theme-teak.scss";
@import "magnifier.scss";
@import "img-compare.scss";

// simple, non-syntax highlighted code block, uses chroma colors from theme
pre, code {
    background-color: $chroma-bg;
    border-radius: $radius-rare;
    color: $chroma-literal;

    // don't color code in headers
    h1 &, h2 &, h3 & {
        color: $grey-light;
    }
}


.content div.highlight:not(:last-child) {
    margin-bottom: 1em;
}

.card {
    // for badges
    overflow: hidden;
    align-items: stretch;

    .card-title-row {
        display: flex;
        flex-direction: row;
    }

    .card-title {
        flex: 1 1 auto;
        overflow: hidden;
        min-width: 10rem;
    }

    .card-title-suffix {
        margin-left: 0.5rem;
        flex: 0 0 auto;
        max-height: 4rem;
        overflow: hidden;

        @include mobile {
            // max-width: 10rem;
            flex: 0 1 auto;
        }

        .tags {
            flex-wrap: wrap;
        }
    }

    .card-image {
        background-color: $black-ter;

        img {
            object-fit: cover;
            object-position: center;
        }
    }

    .card-content {
        overflow: hidden;
        padding-left: 1.15rem;
    }

    .content:not(:last-child) {
        margin-bottom: 0.5rem;
    }

    &.is-horizontal {
        display: flex;
        flex-direction: row;

        .card-image {
            flex: 0 0 auto;
            width: 10rem;

            @include mobile {
                width: 5rem;
            }

            .image {
                height: 100%;
            }

            img {
                // prevent affecting layout
                position: absolute;
                // crop image so content is centered
                height: 100%;

                &:first-child {
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                }
            }

        }

        .card-content {
            flex: 1 1 auto;

            &:not(:first-child) {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }

            &:last-child {
                border-top-right-radius: $card-radius;
                border-bottom-right-radius: $card-radius;
            }
        }
    }

    &.full-width {
        .card-content {
            padding: 1.75rem;

            @include touch {
                padding-left: 2rem;
            }
            @include desktop {
                padding-left: 3rem;
            }
        }
    }

    // page-type badges
    &:not(.full-width) {
        div.page-type-badge {
            pointer-events: none;
            position: absolute;
            height: $corner-badge-size;
            width: $corner-badge-size;
            left: -$corner-badge-size * 0.5;
            top: -$corner-badge-size * 0.5;

            transform: rotate(-45deg);
            -webkit-transform: rotate(-45deg);
        }
    }

    &.links-type {
        .page-type-badge {
            background-color: $content-links-color;
        }
        .card-image i {
            color: $content-links-color;
        }
    }
    &.docs-type {
        .page-type-badge {
            background-color: $content-docs-color;
        }
        .card-image i {
            color: $content-docs-color;
        }
    }
    &.tools-type {
        .page-type-badge {
            background-color: $content-tools-color;
        }
        .card-image i {
            color: $content-tools-color;
        }
    }
    &.creative-type {
        .page-type-badge {
            background-color: $content-creative-color;
        }
        .card-image i {
            color: $content-creative-color;
        }
    }
}

.hero {
    // force full-width, like the full-width class below
    width: 100vw;
    max-width: 100vw;
    margin-left: calc((100vw - 100%) / -2);

    // support absolute positioned content relative to the hero
    &.has-background {
        position: relative;
        overflow: hidden;
    }

    &.is-fullheight,
    &.is-fullheight-with-navbar {
        .hero-body > .container {
            // some padding to accomodate mobile bottom toolbars
            margin-bottom: 7rem;
        }
    }
}

.background-image,
.background-video {
    width: 100%;
    height: 100%;
    max-width: 100%;
    position: absolute;
    pointer-events: none;
    overflow: hidden;
    object-fit: cover;
    top: 0;
    left: 0;

    &.is-transparent {
        opacity: 0.5;
    }
}

// makes an element the full width of the viewport regardless of parent size
.full-width {
    width: 100vw;
    max-width: 100vw;
    margin-left: calc((100vw - 100%) / -2);

    &.card, & .card {
        .card-image:first-child img {
            border-radius: 0;
        }

        .card-content:last-child {
            border-radius: 0;
        }
    }
}

.image-icon-centered {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: $link;
}

.image video {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    width: 100%;
    height: 100%;

    object-fit: cover;
    object-position: center;
}

.thumb-hover {
    opacity: 0;
    transition: opacity .25s;

    &:hover {
        opacity: 1;
    }
}

.anchor-block {
    display: block;
    width: 100%;
    height: 100%;
}

.text-scan-anchor {

    &.text-scan-hover, & .text-scan-hover {
        position: relative;
        overflow: hidden;
        white-space: nowrap;

        span.text-scan {
            display: inline-block;
            position: relative;
            overflow: visible;
            min-width: 100%;
        }
    }

    &:hover {
        span.text-scan {
            animation: text-scan 3s infinite alternate ease-in-out;
        }
    }
}

.flicker-link-anchor {

    .flicker-link {
        opacity: 0.4;

    }

    &:hover {
        .flicker-link {
            opacity: 1;
            animation: flicker-on .75s;
        }
    }
}

@keyframes text-scan {
    0%,
    10% {
        transform: translateX(0%);
        left: 0%;
    }
    90%,
    100% {
        transform: translateX(-100%);
        left: 100%;
    }
}

@keyframes fade-in {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes flicker-on {
    0% {
        opacity: .3;
    }
    10% {
        opacity: .6;
    }
    18% {
        opacity: .3;
    }
    22% {
        opacity: .8;
    }
    26% {
        opacity: .4;
    }
    40% {
        opacity: .7;
    }
    60% {
        opacity: .8;
    }
    100% {
        opacity: 1;
    }
}

.image.is-2by1-mobile {
    @include mobile {
        padding-top: 50%;

        img, .has-ratio {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            width: 100%;
            height: 100%;
        }
    }
}

@include mobile {
    .columns.is-reversed-mobile {
        flex-direction: column-reverse;
        display: flex;
    }
}

.has-ratio-1by1 {
    aspect-ratio: 1 / 1;
}
.has-ratio-2by1 {
    aspect-ratio: 2 / 1;
}
.has-ratio-3by1 {
    aspect-ratio: 3 / 1;
}
.has-ratio-4by1 {
    aspect-ratio: 4 / 1;
}
.has-ratio-1by2 {
    aspect-ratio: 1 / 2;
}
.has-ratio-1by3 {
    aspect-ratio: 1 / 3;
}
.has-ratio-1by4 {
    aspect-ratio: 1 / 4;
}


.has-color-links {
    color: $content-links-color !important;
    border-color: $content-links-color !important;

    &.button.is-light.is-outlined:hover {
        background-color: rgba($content-links-color, 0.3) !important;
    }
}

.has-color-tools {
    &, & strong {
        color: $content-tools-color !important;
        border-color: $content-tools-color !important;
    }

    &.button.is-light.is-outlined:hover {
        background-color: rgba($content-tools-color, 0.3) !important;
    }
}
